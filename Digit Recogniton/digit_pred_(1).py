# -*- coding: utf-8 -*-
"""Digit_pred (1).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tRndp4ClHsCTA1WR3Qfx0klPYV02D-cl

Import Libs
"""

import os
import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
import cv2

"""Import Dataset"""

mnist=tf.keras.datasets.mnist
(x_train,y_train),(x_test,y_test)=mnist.load_data()
x_train=tf.keras.utils.normalize(x_train,axis=1)
x_test=tf.keras.utils.normalize(x_test,axis=1)

"""Model trianing"""

model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(units=128, activation=tf.nn.relu))
model.add(tf.keras.layers.Dense(units=128, activation=tf.nn.relu))
model.add(tf.keras.layers.Dense(units=10, activation=tf.nn.softmax))
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])
model.fit(x_train, y_train, epochs=100)
model.save('digits.model')
loss, accuracy=model.evaluate(x_test, y_test)
print("Loss:",loss)
print("Accu:",accuracy)

!unzip /content/digits.zip

"""Test"""

for i in range(1,20):
  file_name=f"/content/digits/digit{i}.png"
  img = cv2.imread(file_name)[:,:,0]
  img = np.invert(np.array([img]))
  prediction = model.predict(img)
  print(f"The number is probably a {np.argmax(prediction)}")
  plt.imshow(img[0], cmap=plt.cm.binary)
  plt.show()

"""Classification report"""

history=model.fit(x_train, y_train, epochs=60)
plt.plot(history.history['accuracy'])
plt.title("Model Accuracy")
plt.xlabel("epochs")
plt.ylabel("accuracy")
plt.legend(['train'],loc='upper left')
plt.show()
plt.plot(history.history['loss'])
plt.title("Model Loss")
plt.xlabel("epochs")
plt.ylabel("loss")
plt.legend(['train'],loc='upper left')
plt.show()